[module operation_queries('http://www.muml.org/pim/connector/1.0.0', 'http://www.muml.org/pim/behavior/1.0.0',
				'http://www.storydriven.org/core/0.3.1',
				'http://www.muml.org/pim/actionlanguage/1.0.0',
				'http://www.muml.org/pim/msgtype/1.0.0',
				'http://www.muml.org/pim/types/1.0.0',
				'http://www.muml.org/modelinstance/1.0.0',
				'http://www.muml.org/pim/component/1.0.0',
				'http://www.muml.org/pim/instance/1.0.0',
				'http://www.muml.org/pim/realtimestatechart/1.0.0')/]

[import org::muml::codegen::c::actionlanguage::variable_queries]

[**
 * Returns the name of an operation's output variable
 * @param operation the operation
*/]
[query public getOperationOutputVariableName(operation : Operation) : String =
	getOperationsOutputVariableName(
		operation.implementations->at(1).getAllLocalVariableDeclarationStatements()->collect(variable.name)->asSet(),
		'ret'
	)
/]

[**
 * Recursively calculates the name of an operation's output variable
 * @param allLocalVariableNames a set containing the names of all local variables which are used in the operation
 * @param name the current name of the output variable
*/]
[query private getOperationsOutputVariableName(allLocalVariableNames : Set(String), outputName : String) : String =
	if allLocalVariableNames->includes(outputName) then
		getOperationsOutputVariableName(allLocalVariableNames, outputName + '_ret')
	else
		outputName
	endif
/]

[**
 * Returns the name of the operations package.
 * @param rtsc the rtsc
*/]
[query public getOperationsPackageName(rtsc : RealtimeStatechart) : String =
	rtsc.name + '_operations'
/]

[**
 * Returns the name of the operations package to which this operation belongs to.
 * @param operation the operation
*/]
[query public getOperationsPackageName(operation : Operation) : String =
	operation.eContainer().oclAsType(RealtimeStatechart).getOperationsPackageName()
/]

[**
 * Returns the path of the operation file.
 * @param rtsc the rtsc
 * @param parentPackage the name of the parent package
*/]
[query public getPath(rtsc : RealtimeStatechart, parentPackage : String) : String =
	parentPackage.replaceAll('\\.', '/') + '/' + rtsc.getOperationsPackageName() + '.mo'
/]

[**
 * Returns the operation which contains (directly or indirectly) the expression
 * (this might fail if expression is not contained in an operation)
 * @param expression the expression
*/]
[query public getContainingOperation(expression : Expression) : Operation =
	expression.oclAsType(ecore::EObject)->asSet()->closure(e : ecore::EObject |
		if e.oclIsKindOf(behavior::Operation) then
			e
		else
			e.eContainer()
		endif
	)->select(
		oclIsKindOf(Operation)
	)->collect(
		oclAsType(Operation)
	)->asOrderedSet()->last()
/]