[comment encoding = UTF-8 /]
[**
 * The documentation of the module Events.
 */]
[module Message('http://www.fujaba.de/muml/connector/0.4.0', 'http://www.fujaba.de/muml/behavior/0.4.0',
				'http://www.storydriven.org/core/0.3.1',
				'http://www.fujaba.de/muml/actionlanguage/0.4.0',
				'http://www.fujaba.de/muml/msgtype/0.4.0',
				'http://www.fujaba.de/muml/types/0.4.0',
				'http://www.fujaba.de/modelinstance/0.4.0',
				'http://www.fujaba.de/muml/component/0.4.0',
				'http://www.fujaba.de/muml/instance/0.4.0',
				'http://www.fujaba.de/muml/realtimestatechart/0.4.0')]
[import org::muml::codegen::c::queries::stringQueries]
[import org::muml::codegen::c::queries::modelQueries]
[import org::muml::codegen::c::queries::middlewareQueries]
[import org::muml::codegen::c::actionlanguage::expression]



[**
 * This templates generates a file "messages.proto" for defining all used messages and the MUML-Message
 * in a Protobuf-File.
 * @param rsri the root-ECU
 * @param path the path for generated files
 */]
[template public generateProtobufMessageFile(CIs : OrderedSet(ComponentInstance), path : String, useSubDir : Boolean)]
[file (path+getFileName4ProtoFile(useSubDir), false, 'UTF-8')]
//File: messages.proto
//@max_string_length=16
//@max_repeated_length=100
//@max_bytes_length=16

//the following message types are not generated, because they have no parameters
[for (msg : MessageType | getAllUsedMessages(CIs)) ? (msg.parameters->size()=0)]
//[getVariableName(msg)/]
[/for]

[for (msg : MessageType | getAllUsedMessages(CIs)) ? (msg.parameters->size()>0)]
//protobuf definition for message type [msg.getName()/]
message [getVariableName(msg)/]{
[for (param : Parameter | msg.parameters)]
	optional [param.dataType.getTypeNameForProtoBuf()/] [param.getName()/] = [i/];
[/for]
}
[/for]

//message for QoS-props. This could be an optional parameter for the interface-methods between application layer and middleware
//message QoSProps{
//	optional int32 maxTime = 1;
//	optional int32 minTime = 2;
//	optional int32 arrivalProb = 3;
//}

//This is our more generic message, which is used in the middleware, it cointains a muml-message as a byte array
message MiddlewareMessage{
	optional int32 targetPort = 1;
	optional int32 msgID = 2;
	optional bytes mumlMsg = 3;
	//repeated QoSProps qos = 4;
}
[/file]
[/template]


[**
 * Generates file, which contains typedefs for every Message-Struct, which is generated
 * by Protobuf. Therefore, you can use the name of the message without 'struct' in front.
 */]
[template public generateProtobufNewHeader(CIs : OrderedSet(ComponentInstance), path : String, useSubDir: Boolean)]

[comment protobuf files/]
[file (path+getFileName4MessageTypes(useSubDir), false, 'UTF-8')]
/**
 * @file 
 * @author generated by Fraunhofer IEM
 * @brief Since protobuf doesn't use typedef for structs; The typedefs for the protobuf Messages are definied here
 * @details To guarantee unique Names for Messages, the Name of the corresponding MessageTypeReposity is appended
 */
#ifndef MESSAGE_TYPES_H
#define MESSAGE_TYPES_H
#include "Messages.h"

[for (msg : MessageType | getAllUsedMessages(CIs)) ? (msg.parameters->size()>0)]
 /**
  * @brief The typedef for the Message Type: [msg.getName()/], whose struct is generated via protobuf
  */
typedef struct [getVariableName(msg)/] [getVariableName(msg)/];
[/for]
#endif /* MESSAGE_TYPES_H */
[/file]
[/template]


